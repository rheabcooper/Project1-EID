#!/usr/bin/python
# Copyright (c) 2014 Adafruit Industries
# Author: Tony Di



from matplotlib.backends.backend_qt4agg import NavigationToolbar2QTAgg as NavigationToolbar

class MyMainWindow(QtGui.QMainWindow):
   """Class for the main window of the GUI. All the methods required are here"""
    def __init__(self, parent=None):
	QtGui.QWidget.__init__(self, parent)
	self.ui = Ui_MainWindow()
	self.ui.setupUi(self)
	self.ui.showhum_button.clicked.connect(self.Start)
	self.ui.HumGraph_button.clicked.connect(self.HumGraph)
	self.ui.TempGraph_button.clicked.connect(self.TempGraph)
	self.ui.close_button.clicked.connect(self.close)
	self.ui.showaverage_button.clicked.connect(self.ShowAverage)
	self.ui.figure=plt.figure(figsize=(15,5))
	self.ui.canvas=FigureCanvas(self.ui.figure)
	self.ui.gridLayout.addWidget(self.ui.canvas,1,0,1,2)
            
    def ShowAverage(self):
        """method to calculate the average of temperature and humidity values that are stored in 2 lists and display it in a dialog box that pops up when the button is clicked """ 
	averagehum=sum(a)/len(a)      
	averagetemp=sum(b)/len(b)
	showavghum="Average Humidity is " + str(averagehum)
	showavgtemp="\nAverage Temperature is " + str(averagetemp)
	d=QtGui.QDialog()                                    
	d.setWindowTitle("Average")
	l2=QtGui.QLabel(d)
	l2.setText(showavghum + showavgtemp)
	l2.show()
	d.exec_()             
        
    def TempGraph(self):
        """method to plot the temperature graph from the list """
	plt.cla()
	ax=self.ui.figure.add_subplot(111)
	x=[i for i in range(l)] #x axis will have the iterations
	y=b                     #y axis will have the list of temperature values
	ax.plot(x,y,'b.-')
	ax.set_title('Temperature')
	self.ui.canvas.draw()

    def HumGraph(self):
	"""method to plot the humidity graph from the list """
        plt.cla()
        ax=self.ui.figure.add_subplot(111)
        x=[i for i in range(l)] #x axis will have the iterations
        y=a                     #y axis will have the list of temperature values
        ax.plot(x,y,'b.-')
        ax.set_title('Humidity')
        self.ui.canvas.draw()
    	
    def Start(self):
	"""main method that gets each temp, humidity value and displays it along with the timestamp and at the end of a predefined number of iteration, it displays the entire list"
	listWidget=QtGui.QListWidget()
	listWidget.setWindowTitle("List of Values")
	for i in range(l):     #l is the predefined number of iterations
	#while(1): 
            humidity,temperature = Adafruit_DHT.read_retry(sensor, pin)
	    a.append(humidity)
	    b.append(temperature)
	    if temperature and humidity is not None :
	       showtemp="Temperature is in degree Celsius is " + str(temperature) 
	       showhum="\nHumidity is : " + str(humidity)
	       now = datetime.datetime.now() 
	       showtime="\nCurrent time is : " + now.strftime("%Y-%m-%d %H:%M:%S") 
	       self.ui.showhum_window.setText(showtemp + showhum + showtime)
	       item=QtGui.QListWidgetItem("Temp: %f , Humidity: %f " % (temperature,humidity))
               listWidget.addItem(item)

	       if temperature > threshold:  #if the temperature is above a predefined threshold value, a message box pops up with a warning
                  w=QtGui.QWidget()
                  result=QtGui.QMessageBox.warning(w, "Message", "Temperature too high")
               else:
		  self.ui.statusbar.showMessage("Temperature optimal",1000000)
            else:
               shownotemp="Sorry, temperature , humidity unavailable . Try again ";
               self.ui.showhum_window.setText(shownotemp)
            time.sleep(2)          #2 second delay to enable change of temperature and humidity values
	listWidget.show()
	listWidget._exec()

#Reference : https://github.com/adafruit/Adafruit_Python_DHT
# Parse command line parameters.
sensor_args = { '11': Adafruit_DHT.DHT11,
                '22': Adafruit_DHT.DHT22,
                '2302': Adafruit_DHT.AM2302 }
if len(sys.argv) == 3 and sys.argv[1] in sensor_args:
    sensor = sensor_args[sys.argv[1]]
    pin = sys.argv[2]
else:
    print('usage: sudo ./Adafruit_DHT.py [11|22|2302] GPIOpin#')
    print('example: sudo ./Adafruit_DHT.py 2302 4 - Read from an AM2302 connected to GPIO #4')
    sys.exit(1)

a=[] #the list for humidity values
b=[] #the list for temperature values
l=7  #setting the number of iterations
threshold=20  #setting the threshold temperature


#instantiating the MyMainWindow class
app=QtGui.QApplication(sys.argv)
myapp=MyMainWindow()
myapp.show()
sys.exit(app.exec_())


